---
# Add this snippet to the top of your playbook. 
# It will install python2 if missing (but checks first so no expensive repeated apt updates)
# gwillem@gmail.com

- hosts: tag_role_tomcat
  gather_facts: False
  become: yes
  
  tasks:
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal && wget https://bootstrap.pypa.io/get-pip.py &&  python get-pip.py &&  pip install boto && pip install boto3)


# Gather facts about a particular ELB
- hosts: localhost
  connection: local
  tags:
      - configuration
  tasks:
  - elb_application_lb_facts:
      names: "{{ nxl_env_name }}-elb"
      region: ap-southeast-2
    register: elb_facts

- hosts: tag_role_tomcat
  gather_facts: no
  tags:
      - configuration
  tasks:
  - set_fact:
      elb_dns: "{{ hostvars.localhost.elb_facts.load_balancers[0].dns_name }}"
    when: hostvars.localhost.elb_facts.load_balancers.0 is defined

# Install Tomcat Server Role
- hosts: tag_role_tomcat
  remote_user: "{{sshuser}}"
  become: yes
  become_method: sudo

  pre_tasks:
    - debug: var=version
 # choice the tomcat version
  roles:  
    # - { role: tomcat7, when: version == 7 }
    - role: tomcat8 #, when: version == 8 }

# Install postgres server role
- hosts: tag_role_database
  become: yes
  roles:
  - role: geerlingguy.postgresql
    become: yes

# Install ApacheDS for ldap
- hosts: tag_role_ldap
  become: yes
  roles:
    - apacheds

# Deploy a war file onto a  standalone Tomcat 7 server.

- hosts: tag_role_tomcat
  remote_user: "{{sshuser}}"
  become: yes
  become_method: sudo
  roles:
    - { role: deploy-war}

# # Bootstrap the database
# - hosts: tag_role_database
#   become: yes
#   roles:
#     - bootstrap-db 


  
  

  


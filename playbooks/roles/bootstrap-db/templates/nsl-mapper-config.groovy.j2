grails.serverURL = "{{mapper.grails.serverURL}}"

mapper {
    resolverURL = "{{mapper.resolverURL}}"
    contextExtension = '' //extension to the context path (after nsl-mapper).
    defaultProtocol = 'https'

    defaultResolver = { ident ->
        println "nsl-mapper-config.groovy; ident: ${ident}"
        Map serviceHosts = [
                {{shard_namespace}}: 'https://{{ elb_dns }}'
        ]
//TODO: add proper debug/diagnostic logging/info
        String host = serviceHosts[ident.nameSpace]
        println "nsl-mapper-config.groovy; host: ${host}"

        if (ident.objectType == 'treeElement') {
            return "${host}/nxl/services/rest/${ident.objectType}/${ident.versionNumber}/${ident.idNumber}"
        }
        return "${host}/nxl/services/rest/${ident.objectType}/${ident.nameSpace}/${ident.idNumber}"
    }

    format = [
            html: [
                    resolver: defaultResolver
            ],
            json: [
                    resolver: defaultResolver
            ],
            xml : [
                    resolver: defaultResolver
            ],
            rdf : [
                    resolver: { ident ->
                        String url = "DESCRIBE <http://biodiversity.org.au/boa/${ident.objectType}/${ident.nameSpace}/${ident.idNumber}>".encodeAsURL()
                        "sparql/?query=${url}"
                    }
            ]

    ]

}

api.auth = [
        '558aaeb5-3e5b-4dd3-ad03-d17c2689b70d': [
                application: 'nxl/services',
                roles      : ['admin']
        ],
        'd0d1e81d-test-apni-editor': [
                application: 'nxl/editor',
                roles      : ['admin']
        ]
]

ldap {
    skip{
      authentication = false
    }
    domain = 'domain'
    server.url = 'ldap://localhost:10389'
    search {
        base = 'ou=people,dc=example,dc=com'
        user = 'uid=admin,ou=system'
        pass = 'secret'

        group {
            name = 'ou=groups,dc=example,dc=com'
            member {
                element = 'uniqueMember'
                prefix = 'uid='
                postfix = ''
            }
        }
    }
}

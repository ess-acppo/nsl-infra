grails.serverURL = "{{services.grails.serverURL}}"

shard {
    system.message.file = "/tmp/nsl-broadcast.txt"
    product = "Don't use this"
    temp.file.directory = "/tmp"
    colourScheme = " " // :: " " - PROD :: "test"-Purple :: "staging" - blue
    webUser = "webmoss"
}

services {

    mapper {
        apikey = '{{services.grails.api_key}}'
    }

    link {
        mapperURL = "{{services.link.mapperURL}}"
        internalMapperURL = "{{services.link.internalMapperURL}}"
        editor = "{{services.link.editor}}"
    }

    photoService {
        url = "http://www.anbg.gov.au/cgi-bin/apiiDigital?name=%&FORMAT=CSV"
        search = { String name ->
            "http://staging.anbg.gov.au/cgi-bin/apiiName2?name=${name.encodeAsURL()}"
        }
    }

    scriptAddOns = ""

}

ldap {
    domain = 'domain'
    server.url = 'ldap://{{Rails.configuration.ldap_host}}:{{Rails.configuration.ldap_port}}'
    search {
        base = '{{Rails.configuration.ldap_user_base}}'
        user = '{{Rails.configuration.ldap_admin_username}}'
        pass = '{{Rails.configuration.ldap_admin_password}}'

        group {
            name = '{{Rails.configuration.ldap_groups}}'
            member {
                element = 'uniqueMember'
                prefix = 'uid='
                postfix = ''
            }
        }
    }
}

dataSource_nsl {
//    jndiName = "java:comp/env/jdbc/apni"
		username = "{{postgresql_users[1].name}}"
		password = "{{postgresql_users[1].password}}"
		url = "jdbc:postgresql://localhost:5432/{{postgresql_databases[0].name}}"
}

api.auth = [
        '{{Rails.configuration.api_key}}': [
                application: 'nsl/editor',
                roles      : ['admin'],
        ]
]

nslServices.jwt.secret = '{{services.grails.jwtSecret}}'
